<div class="header-1">
    <div class="flex">
        <div class="share">
        </div>
        <AuthorizeView>
            <NotAuthorized>
                <p><a href="sign-in">Войти</a> | <a href="sign-up">Регистрация</a> </p>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

<div class="header-2">
    <div class="flex">
        <a href="home" class="logo">Букля</a>

        <nav class="@_navBarStateClass">
            <a href="home">Главная</a>
            <a href="about">О нас</a>
            <a href="catalog">Каталог</a>
            <AuthorizeView>
                <Authorized>
                    <a href="review">Оставить отзыв</a>
                    <a href="orders">Заказы</a>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="Библиотекарь">
                <Authorized>
                   <a href="admin-dashboard">Режим библиотекаря</a>
                </Authorized>
            </AuthorizeView>
     
        </nav>

        <div class="icons">
            <div id="menu-btn" @onclick="ChangeNavBarClass" class="fas fa-bars"></div>
            <a href="search-page" class="fas fa-search"></a>
            <AuthorizeView>
                <Authorized>
                    <div  @onclick="ChangeUserBoxClass" class="fas fa-user"></div>
                </Authorized>
            </AuthorizeView>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="@_userHomeStateClass">
                    <p>Имя пользовтеля : <span>@context.User.Identity!.Name</span></p>
                    <a @onclick="SignOut" class="delete-btn">Выйти</a>
                </div>
            </Authorized>
        </AuthorizeView>
   
    </div>
</div>

@code{

    [Inject] CustomAuthStateProvider CustomAuthStateProvider { get; set; } = default!;
    [Inject] NavigationManager NavigationManager { get; set; } = default!;

    private const string NavBarActiveClass = "navbar active";
    private const string NavBarInactiveClass = "navbar";

    private string _navBarStateClass = NavBarInactiveClass;

    private const string UserHomeActiveClass = "user-box active";
    private const string UserHomeInactiveClass = "user-box";

    private string _userHomeStateClass = UserHomeInactiveClass;
    
    private const string UserBtnActiveClass = "user-btn active";
    private const string UserBtnInactiveClass = "user-btn"; 
    
    private string _userBtnStateClass = UserBtnInactiveClass;

    private void ChangeNavBarClass() =>
        _navBarStateClass = _navBarStateClass == NavBarInactiveClass
            ? NavBarActiveClass
            : NavBarInactiveClass;

    private void ChangeUserBoxClass()
    {
        _userHomeStateClass = _userHomeStateClass == UserHomeInactiveClass
            ? UserHomeActiveClass
            : UserHomeInactiveClass;
        
        _userBtnStateClass = _userBtnStateClass == UserBtnInactiveClass
            ? UserBtnActiveClass
            : UserBtnInactiveClass;
    }

    private async Task SignOut() => await CustomAuthStateProvider.MarkUserAsLoggedOut();
    
 

}